version: '3.8'

services:
  # Main application
  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:smartguardian@db:5432/smartfileguardian
      - REDIS_URL=redis://redis:6379/0
      - SESSION_SECRET=your-super-secret-session-key-change-in-production
      - PRIVACY_POLICY_VERSION=1.0
      - DATA_RETENTION_DAYS=90
      - ENABLE_GDPR_COMPLIANCE=true
      - ENABLE_DEEP_LEARNING=true
      - BEHAVIORAL_ANALYSIS=true
      - MODEL_UPDATE_INTERVAL=24
    depends_on:
      - db
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./quarantine:/app/quarantine
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - smartguardian-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`smartguardian.local`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=5000"

  # Celery worker for background tasks
  worker:
    build: .
    command: celery -A app.celery worker --loglevel=info --concurrency=4
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:smartguardian@db:5432/smartfileguardian
      - REDIS_URL=redis://redis:6379/0
      - SESSION_SECRET=your-super-secret-session-key-change-in-production
      - PRIVACY_POLICY_VERSION=1.0
      - DATA_RETENTION_DAYS=90
      - ENABLE_GDPR_COMPLIANCE=true
      - ENABLE_DEEP_LEARNING=true
      - BEHAVIORAL_ANALYSIS=true
      - MODEL_UPDATE_INTERVAL=24
    depends_on:
      - db
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./quarantine:/app/quarantine
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - smartguardian-network

  # Celery beat scheduler for periodic tasks
  beat:
    build: .
    command: celery -A app.celery beat --loglevel=info
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:smartguardian@db:5432/smartfileguardian
      - REDIS_URL=redis://redis:6379/0
      - SESSION_SECRET=your-super-secret-session-key-change-in-production
      - PRIVACY_POLICY_VERSION=1.0
      - DATA_RETENTION_DAYS=90
      - ENABLE_GDPR_COMPLIANCE=true
      - ENABLE_DEEP_LEARNING=true
      - BEHAVIORAL_ANALYSIS=true
      - MODEL_UPDATE_INTERVAL=24
    depends_on:
      - db
      - redis
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - smartguardian-network

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=smartfileguardian
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=smartguardian
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - smartguardian-network
    labels:
      - "traefik.enable=false"

  # Redis for caching and Celery broker
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - smartguardian-network
    labels:
      - "traefik.enable=false"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - smartguardian-network

  # Flower for Celery monitoring
  flower:
    build: .
    command: celery -A app.celery flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - smartguardian-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  smartguardian-network:
    driver: bridge